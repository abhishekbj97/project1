# -*- coding: utf-8 -*-
"""Project1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16nOlqF42Lr6iYk3C9TOcJoMczN4lf-0K

<h3>Importing Libraries</h3>
"""

import pandas as pd
import matplotlib.pyplot as plt

# Load the data from parquet files for each day into a single DataFrame
data_frames = []
for day in range(1, 32):  # Assuming days 1 through 31
    filename = f"Data/2019-07-{day}.parquet"
    df = pd.read_parquet(filename)
    data_frames.append(df)

# Concatenate all the data frames into a single DataFrame
full_data = pd.concat(data_frames, ignore_index=True)

full_data

"""1."""

# Display basic statistics
print(full_data.describe())

# Plot daily trend of total amount spent on bets
daily_total_spent = full_data.groupby('date')['stake'].sum()
daily_total_spent.plot(kind='bar', title='Daily Total Stake')
plt.ylabel('Total Stake (euro)')
plt.show()

# Plot distribution of stakes
plt.hist(full_data['stake'], bins=20)
plt.title('Distribution of Stake Amounts')
plt.xlabel('Stake (euro)')
plt.ylabel('Frequency')
plt.show()

# Plot scatter plot of stake vs. win
plt.scatter(full_data['stake'], full_data['win'], alpha=0.5)
plt.title('Stake vs. Win')
plt.xlabel('Stake (euro)')
plt.ylabel('Win (euro)')
plt.show()

# Plot distribution of games played
game_counts = full_data['category'].value_counts()
game_counts.plot(kind='bar', title='Game Popularity')
plt.xlabel('Game')
plt.ylabel('Number of Bets')
plt.show()

"""2."""

# Convert the 'time' column to a string and then to datetime format
full_data['time'] = full_data['time'].astype(str).str.zfill(6)
full_data['time'] = pd.to_datetime(full_data['time'], format='%H%M%S')

# Extract the hour from the datetime 'time' column
full_data['hour'] = full_data['time'].dt.hour

# Count the number of bets for each hour
hourly_bets = full_data['hour'].value_counts().sort_index()

# Plot the distribution of bets across hours
hourly_bets.plot(kind='bar', title='Hourly Distribution of Bets')
plt.xlabel('Hour of the Day')
plt.ylabel('Number of Bets')
plt.xticks(rotation=0)
plt.show()

# Find the hour with the maximum number of bets
max_hour = hourly_bets.idxmax()
print(f"The majority of bets are made in hour: {max_hour}")

"""3."""

# Concatenate all the data frames into a single DataFrame
full_data = pd.concat(data_frames, ignore_index=True)

# Calculate profit for each row
full_data['profit'] = full_data['stake'] - full_data['win']

# Calculate total profit for each game
game_profit = full_data.groupby('category')['profit'].sum()

# Find the game with the highest total profit
most_profitable_game = game_profit.idxmax()
total_profit = game_profit.max()

print(f"The most profitable game is Game {most_profitable_game} with a total profit of {total_profit:.2f} euro.")

